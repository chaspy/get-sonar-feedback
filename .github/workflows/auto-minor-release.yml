name: release-on-version

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: >-
      ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
          (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure git user
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Read package.json version
        id: pkg
        run: |
          echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Fetch tags
        run: git fetch --tags --quiet

      - name: Create Git tag if missing
        id: tag
        run: |
          TAG=v${{ steps.pkg.outputs.version }}
          if git rev-parse -q --verify refs/tags/$TAG >/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            exit 0
          fi
          git tag $TAG
          git push origin $TAG
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.tag.outputs.exists == 'false'
